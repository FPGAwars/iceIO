// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('InOut');
gettext('Pull-up');
gettext('ECP5');
gettext('ICE40');
gettext('02-bits');
gettext('InOut-right');
gettext('InOut-Right_ECP5:  InOut block, with the pin on the right side, for ECP5 FPGA Family');
gettext('InOut');
gettext('InOut_ECP5:  Input-Output block for the ECP5 FPGA Family');
gettext('InOut-x2-right');
gettext('InOut-x2-Right_ECP5:  2 bits Input-Output block for the ECP5 FPGA Family (Pin on the Right)');
gettext('Bus2-Join-all: Joint two wires into a 2-bits Bus');
gettext('Bus2-Split-all: Split the 2-bits bus into two wires');
gettext('InOut-x2');
gettext('InOut-x2_ECP5:  2 bits Input-Output block for the ECP5 FPGA Family');
gettext('02-bits');
gettext('InOut-right');
gettext('InOut-Right_ICE40:  InOut block, with the pin on the right side, for ICE40 FPGA Family');
gettext('InOut');
gettext('InOut_ICE40:  Input-Output block for the ICE40 FPGA Family');
gettext('InOut-x2-right');
gettext('InOut-x2-Right_ICE40:  2 bits Input-Output block for the ICE40 FPGA Family (Pin on the Right)');
gettext('InOut-x2');
gettext('InOut-x2_ICE40:  2 bits Input-Output block for the ICE40 FPGA Family');
gettext('ICE40');
gettext('Pull-up-x1');
gettext('Pull-up_ICE40:: FPGA internal pull-up configuration on the input port. ICE40 FPGA family');
gettext('### Pull-up parameter:\n\n0: No pull-up  \n1: Pull-up activated');
gettext('Only an FPGA pin can  \nbe connected here!!!');
gettext('The pull-up is connected  \nby default');
gettext('Pull-up-x2');
gettext('Pull-upx1_ICE40: 2 internal pull-up configuration on the input port. ICE40 FPGA family');
gettext('The pull-ups are connected  \nby default');
gettext('pull-up-x03');
gettext('3 FPGA internal pull-ups');
gettext('Bus3-Join-all: Joint three wires into a 3-bits Bus');
gettext('Bus3-Split-all: Split the 3-bits bus into three wires');
gettext('pull-up-x04');
gettext('4 FPGA internal pull-ups');
gettext('Bus4-Split-all: Split the 4-bits bus into its wires');
gettext('Bus4-Join-all: Join all the wires into a 4-bits Bus');
gettext('pull-up-x08');
gettext('8 FPGA internal pull-ups');
gettext('Bus8-Join-half: Join the two same halves into an 8-bits Bus');
gettext('Bus8-Split-half: Split the 8-bits bus into two buses of the same size');
gettext('01-Input-config');
gettext('02-Output-config');
gettext('03-InOut-test');
gettext('04-pull-up-config');
gettext('TESTs');
gettext('00-Index');
gettext('# INDEX: IceIO Collection');
gettext('## InOut');
gettext('### ICE40');
gettext('### ECP5');
gettext('### 2 Bits');
gettext('### 1 Bit');
gettext('## Pull-up');
gettext('### 3 Bits');
gettext('### 4 Bits');
gettext('Alhambra-II');
gettext('ULX3S-12F');
gettext('01-button-LED');
gettext('Constant bit 0');
gettext('Input pin  \n(Manually configured)');
gettext('**InOut block**');
gettext('Configure as  \nan input');
gettext('## Manual configuration of an input pin\n\nExample of how the IO block is used for configuring a pin as input  \nThe input pin is shown on a LED');
gettext('**ICE40 FPGA family**');
gettext('02-buttons-LEDs-x2');
gettext('Input pins  \n(Manually configured)');
gettext('## Manual configuration of two input pins\n\nThe two pins are configured as input and shown on two LEDs');
gettext('01-button-LED');
gettext('1-bit constant');
gettext('Output pin');
gettext('wifi_gpio0 should be 0 if wifi  \nis not used');
gettext('**ECP5 FPGA family**');
gettext('### ULX3S Configuration');
gettext('02-buttons-LEDs-x2');
gettext('Alhambra-II');
gettext('ULX3S-12F');
gettext('01-Blinking-LED');
gettext('Constant bit 1');
gettext('sysclk_divN_24bits: Generate a signal from the division of the system clock by N. (24-bits precision) (N = 2,3,4,..,0x1000000))');
gettext('Generic: 24-bits k-1 constant (Input values: 1,2,...,h1000000). It returns the value input by the user minus 1. Outputs: 0,1,2,...,FFFFFF');
gettext('Comp2-24bit: Comparator of two 24-bit numbers');
gettext('Comp2-8bit: Comparator of two 8-bit numbers');
gettext('Comp2-4bit: Comparator of two 4-bit numbers');
gettext('Comp2-1bit: Comparator of two 1-bit numbers');
gettext('XOR gate: two bits input xor gate');
gettext('NOT gate (Verilog implementation)');
gettext('Three bits input And gate');
gettext('Two bits input And gate');
gettext('Bus24-Split-one-third: Split the 24-bits bus into three buses of  the same size');
gettext('24-bits Syscounter with reset');
gettext('DFF-rst-x24: 24 D flip-flops in paralell with reset');
gettext('Bus24-Join-one-third: Join the three buses into an 24-bits Bus');
gettext('DFF-rst-x08: Eight D flip-flops in paralell with reset');
gettext('DFF-rst-x04: Three D flip-flops in paralell with reset');
gettext('DFF-rst-x01: D Flip flop with reset input. When rst=1, the DFF is 0');
gettext('D Flip-flop (verilog implementation)');
gettext('Inc1-24bit: Increment a 24-bits number by one');
gettext('AdderK-24bit: Adder of 24-bit operand and 24-bit constant');
gettext('Generic: 24-bits generic constant');
gettext('Adder-24bits: Adder of two operands of 24 bits');
gettext('Adder-8bits: Adder of two operands of 8 bits');
gettext('Adder-4bits: Adder of two operands of 4 bits');
gettext('Adder-1bit: Adder of two operands of 1 bit');
gettext('AdderC-1bit: Adder of two operands of 1 bit plus the carry in');
gettext('OR2: Two bits input OR gate');
gettext('AdderC-4bits: Adder of two operands of 4 bits and Carry in');
gettext('AdderC-8bits: Adder of two operands of 8 bits and Carry in');
gettext('Bus16-Join-half: Join the two same halves into an 16-bits Bus');
gettext('Bus24-Split-16-8: Split the 24-bits bus into two buses of 16 and 8 wires');
gettext('Bus16-Split-half: Split the 16-bits bus into two buses of the same size');
gettext('Bus24-Join-8-16: Join the two buses into an 24-bits Bus');
gettext('Counter-x01: 1-bit counter');
gettext('Reg: 1-Bit register');
gettext('2-to-1 Multplexer (1-bit channels). Fippled version');
gettext('2-to-1 Multplexer (1-bit channels)');
gettext('Output pin  \n(Manually configured)');
gettext('**InOut-right block**');
gettext('Configure as  \nan output');
gettext('## Manual configuration of an output pin\n\nExample of how the IO block is used for configuring a pin as output  \nThe LED is blinking');
gettext('T flip-flop');
gettext('Output: 0,1,2,...,hffffff');
gettext('Inputs: 1,2,...,h1000000');
gettext('A');
gettext('B');
gettext('Input');
gettext('Output');
gettext('Reset input: Active high  \nWhen rst = 1, the DFF is reset to 0');
gettext('Data input');
gettext('System clock');
gettext('Initial default  \nvalue: 0');
gettext('Parameter: Initial value');
gettext('Input data');
gettext('# D Flip-Flop  \n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1');
gettext('Mux 2-1');
gettext('D Flip-flip\n(System)');
gettext('02-Blinking-LEDs-x2');
gettext('Output pins  \n(Manually configured)');
gettext('**InOut-x2-right block**');
gettext('## Manual configuration of two output pins\n\nExample of how the IO block is used for configuring two pins as outputs  \nThe two LEDs are blinking alternatively');
gettext('01-Blinking-LED');
gettext('02-Blinking-LEDs-x2');
gettext('Alhambra-II');
gettext('ULX3S-12F');
gettext('01-InOut-button-LED');
gettext('Input/Output pin  \nConnect to D1 or D2 by  \nan external wire');
gettext('Configure as input/output:\n* 0: Input\n* 1: Output');
gettext('## Manual configuration of an input/output pin\n\nExample of how the IO block is used for configuring a pin as input/output  \nThe button SW2 is used for configuring the pin as input (0) or output (1)  \nWhen input, the bit read is shown on the LED0. When output, a 1-sec square\nsignal is written  \n\nThe D0 input/output pin is connected externally (by a wire) to the D1 or D2 pins.  \nThe SW1 button is conected to D1, and the D2 pin is conected to LED7');
gettext('1 when configured as input');
gettext('Connect to D0 using an  \nexternal wire');
gettext('1-sec period  \nsquare signal');
gettext('02-InOut-button-LED-rightice');
gettext('01-InOut-button-LED-right');
gettext('Input/Output pin  \nConnect to GN1 or GN2 by  \nan external wire');
gettext('## Manual configuration of an input/output pin\n\nExample of how the IO block is used for configuring a pin as input/output  \nThe button B1 is used for configuring the pin as input (0) or output (1)  \nWhen input, the bit read is shown on the LED2. When output, a 1-sec square\nsignal is written  on LED1\n\nThe GN0 input/output pin is connected externally (by a wire) to the GN1 or GN2 pins.  \nThe B1 button is conected to GN1, and the GN2 pin is conected to LED1');
gettext('Connect to GN0 using an  \nexternal wire');
gettext('01-InOut-button-LED');
gettext('Alhambra-II');
gettext('01-pull-up-x1');
gettext('## Testing one pull-up  \n\nThe button state can be seen on the LED0  \n* Button not pressed: LED0 on  \n* Button pressed: LED0 off');
gettext('The pull-up is active by default  \nIt can be disconnected by setting the  \nparameter to 0');
gettext('02-pull-up-x2');
gettext('## Testing two pull-ups  \n\nThe buttons state is shown on LED0 and LED1');
gettext('The pull-ups are active by default  \nThey can be disconnected by  \nseting the parameter to 0');
gettext('Buttons');
gettext('03-pull-up-x3');
gettext('## Testing three pull-ups  \n\nThe buttons state is shown on the LEDs');
gettext('02-pull-up-x2');
gettext('03-pull-up-x3');
gettext('Pull-up');
gettext('Pull-up-x03');
gettext('Pull-up-x04');
gettext('Pull-up-x08');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('## Pull-up-x03: Manual testing\n\nThe buttons state is shown on the LEDs');
gettext('01-manual-testing');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('## Pull-up-x04: Manual testing\n\nThe buttons state is shown on the LEDs');
gettext('01-manual-testing');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('## Pull-up-x08: Manual testing\n\nThe buttons state is shown on the LEDs');
gettext('01-manual-testing');
gettext('00-Index');
